//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sleemon.Data
{
    using System;
    using System.Collections.Generic;
    using System.Data.Linq.Mapping;
    
    public partial class Task
        : Entity
    {
        public Task()
        {
        }
    
        [Column(Name = "Id", DbType = "Int32", IsPrimaryKey = true, CanBeNull = false, IsDbGenerated = true)]
        public int Id { get; set; }
        [Column(Name = "Title", DbType = "String", CanBeNull = false)]
        public string Title { get; set; }
        [Column(Name = "Description", DbType = "String")]
        public string Description { get; set; }
        [Column(Name = "TaskCategory", DbType = "Byte", CanBeNull = false)]
        public byte TaskCategory { get; set; }
        [Column(Name = "StartFrom", DbType = "DateTime", CanBeNull = false)]
    	private System.DateTime _startFrom;
    	public virtual System.DateTime StartFrom 
    	{
    		get { return _startFrom; }
    		set 
    		{
    			if (value.Kind == DateTimeKind.Unspecified) {
    				_startFrom = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_startFrom = value;
    			}
    		}
    	}
        [Column(Name = "EndTo", DbType = "DateTime")]
    	private Nullable<System.DateTime> _endTo;
    	public virtual Nullable<System.DateTime> EndTo 
    	{
    		get { return _endTo; }
    		set 
    		{
    			if (value != null) {
    				if (value.Value.Kind == DateTimeKind.Unspecified) {
    					_endTo = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
    				} else {
    					_endTo = value;
    				}
    			} else {
    				_endTo = value;
    			}
    		}
    	}
        [Column(Name = "Point", DbType = "Int32", CanBeNull = false)]
        public int Point { get; set; }
        [Column(Name = "OverduePoint", DbType = "Int32", CanBeNull = false)]
        public int OverduePoint { get; set; }
        [Column(Name = "ProductAbility", DbType = "Int32", CanBeNull = false)]
        public int ProductAbility { get; set; }
        [Column(Name = "SalesAbility", DbType = "Int32", CanBeNull = false)]
        public int SalesAbility { get; set; }
        [Column(Name = "ExhibitAbility", DbType = "Int32", CanBeNull = false)]
        public int ExhibitAbility { get; set; }
        [Column(Name = "BelongTo", DbType = "Int32", CanBeNull = false)]
        public int BelongTo { get; set; }
        [Column(Name = "Status", DbType = "Byte", CanBeNull = false)]
        public byte Status { get; set; }
        [Column(Name = "LastUpdateUser", DbType = "String", CanBeNull = false)]
        public string LastUpdateUser { get; set; }
        [Column(Name = "LastUpdateTime", DbType = "DateTime", CanBeNull = false)]
    	private System.DateTime _lastUpdateTime;
    	public virtual System.DateTime LastUpdateTime 
    	{
    		get { return _lastUpdateTime; }
    		set 
    		{
    			if (value.Kind == DateTimeKind.Unspecified) {
    				_lastUpdateTime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_lastUpdateTime = value;
    			}
    		}
    	}
        [Column(Name = "IsActive", DbType = "Boolean", CanBeNull = false)]
        public bool IsActive { get; set; }
    
        private ICollection<GroupSubTask> _GroupSubTask;
        public virtual ICollection<GroupSubTask> GroupSubTask
        {
            get { return this._GroupSubTask ?? (this._GroupSubTask = new HashSet<GroupSubTask>()); }
            set { this._GroupSubTask = value; }
        }
        private ICollection<StorePatrol> _StorePatrol;
        public virtual ICollection<StorePatrol> StorePatrol
        {
            get { return this._StorePatrol ?? (this._StorePatrol = new HashSet<StorePatrol>()); }
            set { this._StorePatrol = value; }
        }
        private ICollection<TaskExam> _TaskExam;
        public virtual ICollection<TaskExam> TaskExam
        {
            get { return this._TaskExam ?? (this._TaskExam = new HashSet<TaskExam>()); }
            set { this._TaskExam = value; }
        }
        private ICollection<TaskLearning> _TaskLearning;
        public virtual ICollection<TaskLearning> TaskLearning
        {
            get { return this._TaskLearning ?? (this._TaskLearning = new HashSet<TaskLearning>()); }
            set { this._TaskLearning = value; }
        }
        private ICollection<TaskQuestionnaire> _TaskQuestionnaire;
        public virtual ICollection<TaskQuestionnaire> TaskQuestionnaire
        {
            get { return this._TaskQuestionnaire ?? (this._TaskQuestionnaire = new HashSet<TaskQuestionnaire>()); }
            set { this._TaskQuestionnaire = value; }
        }
        private ICollection<TrainingTask> _TrainingTask;
        public virtual ICollection<TrainingTask> TrainingTask
        {
            get { return this._TrainingTask ?? (this._TrainingTask = new HashSet<TrainingTask>()); }
            set { this._TrainingTask = value; }
        }
        private ICollection<UserExamAnswer> _UserExamAnswer;
        public virtual ICollection<UserExamAnswer> UserExamAnswer
        {
            get { return this._UserExamAnswer ?? (this._UserExamAnswer = new HashSet<UserExamAnswer>()); }
            set { this._UserExamAnswer = value; }
        }
        private ICollection<UserTask> _UserTask;
        public virtual ICollection<UserTask> UserTask
        {
            get { return this._UserTask ?? (this._UserTask = new HashSet<UserTask>()); }
            set { this._UserTask = value; }
        }
    }
}
