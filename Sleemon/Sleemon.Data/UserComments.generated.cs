//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sleemon.Data
{
    using System;
    using System.Collections.Generic;
    using System.Data.Linq.Mapping;
    
    public partial class UserComments
        : Entity
    {
        public UserComments()
        {
        }
    
        [Column(Name = "Id", DbType = "Int32", IsPrimaryKey = true, CanBeNull = false, IsDbGenerated = true)]
        public int Id { get; set; }
        [Column(Name = "ParentId", DbType = "Int32")]
        public Nullable<int> ParentId { get; set; }
        [Column(Name = "UserUniqueId", DbType = "String", CanBeNull = false)]
        public string UserUniqueId { get; set; }
        [Column(Name = "Comment", DbType = "String", CanBeNull = false)]
        public string Comment { get; set; }
        [Column(Name = "Category", DbType = "Byte", CanBeNull = false)]
        public byte Category { get; set; }
        [Column(Name = "LinkedId", DbType = "Int32")]
        public Nullable<int> LinkedId { get; set; }
        [Column(Name = "IsLegal", DbType = "Boolean", CanBeNull = false)]
        public bool IsLegal { get; set; }
        [Column(Name = "CommentTime", DbType = "DateTime", CanBeNull = false)]
    	private System.DateTime _commentTime;
    	public virtual System.DateTime CommentTime 
    	{
    		get { return _commentTime; }
    		set 
    		{
    			if (value.Kind == DateTimeKind.Unspecified) {
    				_commentTime = DateTime.SpecifyKind(value, DateTimeKind.Utc);
    			} else {
    				_commentTime = value;
    			}
    		}
    	}
        [Column(Name = "IsActive", DbType = "Boolean", CanBeNull = false)]
        public bool IsActive { get; set; }
    
        private ICollection<ProsComments> _ProsComments;
        public virtual ICollection<ProsComments> ProsComments
        {
            get { return this._ProsComments ?? (this._ProsComments = new HashSet<ProsComments>()); }
            set { this._ProsComments = value; }
        }
        private ICollection<UserComments> _UserComments1;
        public virtual ICollection<UserComments> UserComments1
        {
            get { return this._UserComments1 ?? (this._UserComments1 = new HashSet<UserComments>()); }
            set { this._UserComments1 = value; }
        }
        public virtual UserComments UserComments2 { get; set; }
    }
}
